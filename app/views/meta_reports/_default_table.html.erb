<%
row_classes = table.row_classes if !defined?(row_classes) || row_classes.nil?
table_class = table.options[:table_class].to_s if !defined?(table_class) || table_class.nil?
%>
<%= content_tag(:h4, table_name) %>
<div class='list_container'>
<%= content_tag(:table, :class => "table table-condensed #{table_class}") do %>
  <% unless @report[:table_header] == false %>
    <%= content_tag(:thead, content_tag(:tr, table.to_a.shift.map { |h| html_cell(h, tag: :th, inline_css: table.options[:inline_css])}.join.html_safe ) ) %>
  <% end %>
  <tbody>
    <% table.to_a.each_with_index do |row, i|
      style = nil
      if table[:inline_css] && row_classes[i]
        color = nil
        row_classes[i].split(/\s+/).each do |token|
          if color = meta_report_color(token)
            break
          end
        end
        style = "background-color: ##{color}"
        #TODO: handle bold, alignment
      end
      %>
      <%= content_tag(:tr, class: row_classes[i], style: style) do
        row.each do |cell|
          %><%= html_cell(cell, inline_css: table.options[:inline_css]) %><%
        end
      end %>
    <% end %>
  </tbody>
<% end %>
</div>